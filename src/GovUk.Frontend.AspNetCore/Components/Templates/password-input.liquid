{% from "button.macro" import govukButton %}
{% from "input.macro" import govukInput %}

{%- assign id = params.id | default: params.name -%}

{% capture attributesHtml -%}
  {{- ' data-module="govuk-password-input"' | raw }}

  {{- govukI18nAttributes(
    key = 'show-password',
    message = params.showPasswordText
  ) -}}

  {{- govukI18nAttributes(
    key = 'hide-password',
    message = params.hidePasswordText
  ) -}}

  {{- govukI18nAttributes(
    key = 'show-password-aria-label',
    message = params.showPasswordAriaLabelText
  ) -}}

  {{- govukI18nAttributes(
    key = 'hide-password-aria-label',
    message = params.hidePasswordAriaLabelText
  ) -}}

  {{- govukI18nAttributes(
    key = 'password-shown-announcement',
    message = params.passwordShownAnnouncementText
  ) -}}

  {{- govukI18nAttributes(
    key = 'password-hidden-announcement',
    message = params.passwordHiddenAnnouncementText
  ) -}}
{%- endcapture -%}

{%- comment %} Append form group attributes onto attributes set above {% endcomment %}
{%- for name in params.formGroup.attributes %}
  {% assign attributesHtml = attributesHtml | append: " " | append: name | raw | append: '="' | append: params.formGroup.attributes[name] | escape | append: '"' %}
{% endfor -%}

{%- capture buttonHtml %}
{{ govukButton(dict(
  type = "button",
  classes = ("govuk-button--secondary govuk-password-input__toggle govuk-js-password-input-toggle" | append: " " | append: params.button.classes | rstrip),
  text = (params.showPasswordText | default: "Show"),
  attributes = dict(
    aria-controls = id,
    aria-label = (params.showPasswordAriaLabelText | default: "Show password"),
    hidden = dict(
      value = true,
      optional = true
    )
  )
)) | strip }}
{% if params.formGroup.afterInput %}
  {{- params.formGroup.afterInput.html | raw | strip | default: params.formGroup.afterInput.text }}
{% endif -%}
{% endcapture -%}

{{ govukInput(dict(
  formGroup = dict(
    classes = ("govuk-password-input" | append: " " | append: params.formGroup.classes | rstrip),
    attributes = attributesHtml,
    beforeInput = params.formGroup.beforeInput,
    afterInput = dict(
      html = buttonHtml
    )
  ),
  inputWrapper = dict(
    classes = "govuk-password-input__wrapper"
  ),
  label = params.label,
  hint = params.hint,
  classes = ("govuk-password-input__input govuk-js-password-input-input" | append: " " | append: params.classes | rstrip),
  errorMessage = params.errorMessage,
  id = id,
  name = params.name,
  type = "password",
  spellcheck = false,
  autocapitalize = "none",
  autocomplete = (params.autocomplete | default: "current-password"),
  value = params.value,
  disabled = params.disabled,
  describedBy = params.describedBy,
  attributes = params.attributes
)) | strip }}